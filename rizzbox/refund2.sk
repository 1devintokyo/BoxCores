command /refund <offline player>:
	permission: Refund2.refund
	trigger:
		Refund(player, player) if arg 1 is not set
		Refund(player, arg 1) if arg 1 is offline player
function Refund(p: player, arg: player):
	set {-refund::%{_p}'s uuid%} to {_arg}
	set metadata tag "refund" of {_p} to chest inventory with 6 rows named "&2&lRefund &c%{-refund::%{_p}'s uuid%}%"
	set slot (all integers between (((6-1)*9)-1)+1 and (((6-1)*9)-1)+9) of metadata tag "refund" of {_p} to black stained glass pane named "&7"
	set slot (((6-1)*9)-1)+5 of metadata tag "refund" of {_p} to book and quill named "&1&lEDIT REFUND"
	loop ((((5-1)*9)-1)+9) times:
		set slot (loop-value)-1 of metadata tag "refund" of {_p} to ({refund::i::%loop-value%} ? air)
	open (metadata tag "refund" of {_p}) to {_p}
function EditRefund(p: player):
	set metadata tag "editrefund" of {_p} to chest inventory with 6 rows named "&1&lEDIT &2&lREFUND"
	set slot (all integers between (((6-1)*9)-1)+1 and (((6-1)*9)-1)+9) of metadata tag "editrefund" of {_p} to black stained glass pane named "&7"
	set slot (((6-1)*9)-1)+5 of metadata tag "editrefund" of {_p} to barrier block named "&4&lSave refund edit"
	loop ((((5-1)*9)-1)+9) times:
		set slot (loop-value)-1 of metadata tag "editrefund" of {_p} to ({refund::i::%loop-value%} ? air)
	open (metadata tag "editrefund" of {_p}) to {_p}
function ConfirmRefund(p: player, i: item):
	set {-refund::%{_p}'s uuid%::i} to {_i}
	set metadata tag "confirmrefund" of {_p} to chest inventory with 6 rows named "&6&lCONFIRM &2&lREFUND"
	set slot (all integers between (((2-1)*9)-1)+1 and (((2-1)*9)-1)+3), (all integers between (((3-1)*9)-1)+1 and (((3-1)*9)-1)+3), (all integers between (((4-1)*9)-1)+1 and (((4-1)*9)-1)+3) of metadata tag "confirmrefund" of {_p} to lime stained glass pane named "&a&lYES"
	set slot (all integers between (((2-1)*9)-1)+7 and (((2-1)*9)-1)+9), (all integers between (((3-1)*9)-1)+7 and (((3-1)*9)-1)+9), (all integers between (((4-1)*9)-1)+7 and (((4-1)*9)-1)+9) of metadata tag "confirmrefund" of {_p} to red stained glass pane named "&4&lNO"
	set slot (all integers between (((6-1)*9)-1)+1 and (((6-1)*9)-1)+9) of metadata tag "confirmrefund" of {_p} to black stained glass pane named "&7"
	set slot (((3-1)*9)-1)+5 of metadata tag "confirmrefund" of {_p} to {_i}
	open (metadata tag "confirmrefund" of {_p}) to {_p}
on inventory click:
	if player's current inventory is (metadata tag "refund" of player):
		cancel event
		if index of event-slot >= 45:
			EditRefund(player) if event-slot is book and quill
			stop
		ConfirmRefund(player, event-slot)
	if player's current inventory is (metadata tag "editrefund" of player):
		index of event-slot >= 45
		cancel event
		if event-slot is barrier block:
			loop ((((5-1)*9)-1)+9) times:
				set {refund::i::%loop-value%} to slot ((loop-value)-1) of player's current inventory
			Refund(player, {-refund::%player's uuid%})
	if player's current inventory is (metadata tag "confirmrefund" of player):
		cancel event
		if event-slot is red stained glass pane named "&4&lNO":
			Refund(player, {-refund::%player's uuid%})
			stop
		event-slot is lime stained glass pane named "&a&lYES"
		give {-refund::%player's uuid%} {-refund::%player's uuid%::i}
		send "&6&lYou refunded &c%{-refund::%player's uuid%}% &6&la &f%{-refund::%player's uuid%::i}%" to player
		send "&6&lYou have been refunded a &f%{-refund::%player's uuid%::i}% &cby %player%" to {-refund::%player's uuid%}
		close player's inventory
on inventory close:
	player's current inventory is (metadata tag "editrefund" of player)
	loop ((((5-1)*9)-1)+9) times:
		set {refund::i::%loop-value%} to slot ((loop-value)-1) of player's current inventory